// 호이스팅
// 스코프 내부 어디에서는 변수 선언은 최상위에 선언된 것처럼 처리
// 선언하기 전에 호출이 먼저 이루어지는 것이 가능하게 해줌
// var을 사용하는 경우 변수 호이스팅 적용 (할당이 되어야 실질적이 값이 반영된다!)
// 함수 선언문의 경우 호이스팅 적용

// Temporal Dead Zone (TDZ)
// let, const도 호이스팅 되지만 TDZ에 의해 에러가 발생


// 변수 생성과정 (선언, 초기화, 할당)

// var  (함수 스코프)
// 1. 선언과 초기화가 동시에 이루어짐 (초기화 시 undefined를 할당)
// 2. 할당

// let  (블록 스코프)     # 선언과 초기화가 분리되어 이루어짐
// 1. 선언
// 2. 초기화
// 3. 할당

// cosnt
// 1. 선언 + 초기화 + 할당 전부 동시에 이루어짐


// 블록 스코프
// 코드 블록 내에서만 유효, 코드 블록 외부에서는 사용할 수 없음
// 코드 블록 : 함수, 조건문, 반복문, try/catch문 등
// 즉, let, const는 중괄호 내에서만 유효

// 함수 스코프
// 함수 내에서 선언된 변수는 함수 내에서만 유효 함수를 벗어나면 사용할 수 없음
